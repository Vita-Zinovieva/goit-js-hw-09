{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAIvB,SAAPC,EAAcC,EAAUC,GAC/B,MAAMC,EAAM,C,SAAEF,E,MAAUC,GAE4B,OAA7C,IAAIE,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GACbC,YAAZ,KACLH,EACFF,EAAQF,GAG8CG,EAA/CH,EAAI,GAEbD,EAAO,G,CAhBfL,EAAQc,iBAAiB,SAsBsD,SAA5DC,GACjBA,EAAEC,iBAC8B,IAA5BC,EAASC,OAAOlB,EAAQiB,OAAOE,OAC/BC,EAAQF,OAAOlB,EAAQK,MAAMc,OAC7BE,EAAOH,OAAOlB,EAAQqB,KAAKF,OAE/B,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAAG,CAEjCnB,EAAcmB,EADAF,EAAQC,EAAOC,GAE5BC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAGhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('click', newCreate);\n \n//функція ззавдання\nfunction createPromise(position, delay) {   \n  const obj = { position, delay };                       //ствроюєм об'єкт який буде значенням промісів з властивостями (position,delay) \n                    \n  return new Promise((resolve, reject) => {            //обгортаємо функцію в проміс  \n    \n    const shouldResolve = Math.random() > 0.3;           //умова для створення об'єкта \n      setTimeout(() => {                                //записуємо метод setTimeout() щоб запуск функції відбувся після виконання промісу через delay секунд\n        if (shouldResolve) {\n          resolve(obj);                                  //якщо операція успішна(resolve)передаєм їй номер промісу (position), що створюється,\n                                                          // і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n        } else {                                          //в разі помилки(reject) те ж саме (щоб resolve, delay повернулись в повідомленні)\n          reject(obj);\n        }\n      },delay );\n  })\n  \n};  \n\n//створюэмо функцію в якій виконується ітерація по amount, вираховується час затримки і викликається  createPromise.\nfunction newCreate(e) {\n  e.preventDefault();                                     //відміна дії браузера по замовчуванню\n  let amount = Number(formRef.amount.value);              //приводимо введенні дані до числа\n  let delay = Number(formRef.delay.value);\n  let step = Number(formRef.step.value);\n  \n  for (let i = 1; i <= amount; i += 1) {                  \n    let timeDelay = delay + step * i;\n      createPromise(i, timeDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`); \n        \n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        \n      }) \n    }\n}; "],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","obj","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amount","Number","value","delay1","step","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.a1716438.js.map"}